{"documentCount":13,"nextId":13,"documentIds":{"0":"docs/pages/getting-started.mdx#get-started","1":"docs/pages/ch01/constant-product-amm.md#constant-product-amm","2":"docs/pages/ch01/erc20.md#erc20-token","3":"docs/pages/ch01/signature_verification.md#signature-verification","4":"docs/pages/ch01/simple_vault.md#simple-defi-vault","5":"docs/pages/ch01/upgradeable_contract.md#upgradeable-contract","6":"docs/pages/ch00/basics/documentation.md#documentation","7":"docs/pages/ch00/basics/documentation.md#best-practices","8":"docs/pages/ch00/basics/documentation.md#contract-interface","9":"docs/pages/ch00/basics/documentation.md#implementation-details","10":"docs/pages/ch00/basics/introduction.md#basics-of-smart-contracts-in-cairo","11":"docs/pages/ch00/cairo_cheatsheet/cairo_cheatsheet.md#cairo-cheatsheet","12":"docs/pages/ch00/interacting/interacting.md#deploy-and-interact-with-contracts"},"fieldIds":{"title":0,"titles":1,"text":2},"fieldLength":{"0":[2,1,3],"1":[3,1,23],"2":[2,1,71],"3":[2,1,1],"4":[3,1,44],"5":[2,1,146],"6":[1,1,28],"7":[3,2,13],"8":[3,2,78],"9":[3,2,27],"10":[6,1,17],"11":[2,1,15],"12":[5,1,14]},"averageFieldLength":[2.8461538461538463,1.2307692307692308,36.92307692307692],"storedFields":{"0":{"href":"/getting-started#get-started","html":"</header>\n<p>Hello world!</p>","isPage":true,"text":"\nHello world!","title":"Get started","titles":[]},"1":{"href":"/ch01/constant-product-amm#constant-product-amm","html":"</header>\n<p>This is the Cairo adaptation of the <a href=\"https://solidity-by-example.org/defi/constant-product-amm/\">Solidity by example Constant Product AMM</a>.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{{#include </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">../../</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">listings</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">/</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">applications</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">/</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">constant_product_amm</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">/</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">src</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">/</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">contracts</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">cairo</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ConstantProductAmmContract</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}}</span></span></code></pre>","isPage":true,"text":"\nThis is the Cairo adaptation of the Solidity by example Constant Product AMM.\n{{#include ../../listings/applications/constant_product_amm/src/contracts.cairo:ConstantProductAmmContract}}","title":"Constant Product AMM","titles":[]},"2":{"href":"/ch01/erc20#erc20-token","html":"</header>\n<p>Contracts that follow the <a href=\"https://eips.ethereum.org/EIPS/eip-20\">ERC20 Standard</a> are called ERC20 tokens. They are used to represent fungible assets.</p>\n<p>To create an ERC20 conctract, it must implement the following interface:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{{#include </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">../../</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">listings</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">/</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">applications</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">/</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">erc20</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">/</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">src</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">/</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">token</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">cairo</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">interface}}</span></span></code></pre>\n<p>In Starknet, function names should be written in <em>snake_case</em>. This is not the case in Solidity, where function names are written in <em>camelCase</em>.\nThe Starknet ERC20 interface is therefore slightly different from the Solidity ERC20 interface.</p>\n<p>Here&#x27;s an implementation of the ERC20 interface in Cairo:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{{#include </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">../../</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">listings</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">/</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">applications</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">/</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">erc20</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">/</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">src</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">/</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">token</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">cairo</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">erc20}}</span></span></code></pre>\n<p>There&#x27;s several other implementations, such as the <a href=\"https://docs.openzeppelin.com/contracts-cairo/0.7.0/erc20\">Open Zeppelin</a> or the <a href=\"https://cairo-by-example.com/examples/erc20/\">Cairo By Example</a> ones.</p>","isPage":true,"text":"\nContracts that follow the ERC20 Standard are called ERC20 tokens. They are used to represent fungible assets.\nTo create an ERC20 conctract, it must implement the following interface:\n{{#include ../../listings/applications/erc20/src/token.cairo:interface}}\nIn Starknet, function names should be written in snake_case. This is not the case in Solidity, where function names are written in camelCase.\nThe Starknet ERC20 interface is therefore slightly different from the Solidity ERC20 interface.\nHere&#x27;s an implementation of the ERC20 interface in Cairo:\n{{#include ../../listings/applications/erc20/src/token.cairo:erc20}}\nThere&#x27;s several other implementations, such as the Open Zeppelin or the Cairo By Example ones.","title":"ERC20 Token","titles":[]},"3":{"href":"/ch01/signature_verification#signature-verification","html":"</header>","isPage":true,"text":"","title":"Signature Verification","titles":[]},"4":{"href":"/ch01/simple_vault#simple-defi-vault","html":"</header>\n<p>This is the Cairo adaptation of the <a href=\"https://solidity-by-example.org/defi/vault/\">Solidity by example Vault</a>.\nHere&#x27;s how it works:</p>\n<ul>\n<li>\n<p>When a user deposits a token, the contract calculates the amount of shares to mint.</p>\n</li>\n<li>\n<p>When a user withdraws, the contract burns their shares, calculates the yield, and withdraw both the yield and the initial amount of token deposited.</p>\n</li>\n</ul>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{{#include </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">../../</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">listings</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">/</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">applications</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">/</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">simple_vault</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">/</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">src</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">/</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">simple_vault</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">cairo}}</span></span></code></pre>","isPage":true,"text":"\nThis is the Cairo adaptation of the Solidity by example Vault.\nHere&#x27;s how it works:\n\n\nWhen a user deposits a token, the contract calculates the amount of shares to mint.\n\n\nWhen a user withdraws, the contract burns their shares, calculates the yield, and withdraw both the yield and the initial amount of token deposited.\n\n\n{{#include ../../listings/applications/simple_vault/src/simple_vault.cairo}}","title":"Simple Defi Vault","titles":[]},"5":{"href":"/ch01/upgradeable_contract#upgradeable-contract","html":"</header>\n<p>In Starknet, contracts are divided into two parts: contract classes and contract\ninstances. This division follows a similar concept used in object-oriented\nprogramming languages, where we distinguish between the definition and implementation\nof objects.</p>\n<p>A contract class is the definition of a contract: it specifies how the contract\nbehaves. It contains essential information like the Cairo byte code, hint\ninformation, entry point names, and everything that defines its semantics\nunambiguously.</p>\n<p>To identify different contract classes, Starknet assigns a unique identifier to each\nclass: the class hash. A contract instance is a deployed contract that corresponds to\na specific contract class. Think of it as an instance of an object in languages like\nJava.</p>\n<p>Each class is identified by its class hash, which is analogous to a class name in an object-oriented programming language. A contract instance is a deployed contract corresponding to a class.</p>\n<p>You can upgrade a deployed contract to a newer version by calling the <code>replace_class_syscall</code> function. By using this function, you can update the class hash associated with a deployed contract, effectively upgrading its implementation. However, this will not modify the contract&#x27;s storage, so all the data stored in the contract will remain the same.</p>\n<p>To illustrate this concept, let&#x27;s consider an example with two contracts: <code>UpgradeableContract_V0</code>, and <code>UpgradeableContract_V1</code>.\nStart by deploying <code>UpgradeableContract_V0</code> as the initial version. Next, send a transaction that invokes the <code>upgrade</code> function, with the class hash of <code>UpgradeableContract_V1</code> as parameter to upgrade the class hash of the deployed contract to the <code>UpgradeableContract_V1</code> one. Then, call the <code>version</code> method on the contract to see that the contract was upgraded to the V1 version.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{{#include </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">../../</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">listings</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">/</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">applications</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">/</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">upgradeable_contract</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">/</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">src</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">/</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">upgradeable_contract_v0</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">cairo</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">contract}}</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{{#include </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">../../</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">listings</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">/</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">applications</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">/</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">upgradeable_contract</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">/</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">src</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">/</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">upgradeable_contract_v1</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">cairo}}</span></span></code></pre>","isPage":true,"text":"\nIn Starknet, contracts are divided into two parts: contract classes and contract\ninstances. This division follows a similar concept used in object-oriented\nprogramming languages, where we distinguish between the definition and implementation\nof objects.\nA contract class is the definition of a contract: it specifies how the contract\nbehaves. It contains essential information like the Cairo byte code, hint\ninformation, entry point names, and everything that defines its semantics\nunambiguously.\nTo identify different contract classes, Starknet assigns a unique identifier to each\nclass: the class hash. A contract instance is a deployed contract that corresponds to\na specific contract class. Think of it as an instance of an object in languages like\nJava.\nEach class is identified by its class hash, which is analogous to a class name in an object-oriented programming language. A contract instance is a deployed contract corresponding to a class.\nYou can upgrade a deployed contract to a newer version by calling the replace_class_syscall function. By using this function, you can update the class hash associated with a deployed contract, effectively upgrading its implementation. However, this will not modify the contract&#x27;s storage, so all the data stored in the contract will remain the same.\nTo illustrate this concept, let&#x27;s consider an example with two contracts: UpgradeableContract_V0, and UpgradeableContract_V1.\nStart by deploying UpgradeableContract_V0 as the initial version. Next, send a transaction that invokes the upgrade function, with the class hash of UpgradeableContract_V1 as parameter to upgrade the class hash of the deployed contract to the UpgradeableContract_V1 one. Then, call the version method on the contract to see that the contract was upgraded to the V1 version.\n{{#include ../../listings/applications/upgradeable_contract/src/upgradeable_contract_v0.cairo:contract}}\n{{#include ../../listings/applications/upgradeable_contract/src/upgradeable_contract_v1.cairo}}","title":"Upgradeable Contract","titles":[]},"6":{"href":"/ch00/basics/documentation#documentation","html":"</header>\n<p>It&#x27;s important to take the time to document your code. It will helps developers and users to understand the contract and its functionalities.</p>\n<p>In Cairo, you can add comments with <code>//</code>.</p>\n","isPage":true,"text":"\nIt&#x27;s important to take the time to document your code. It will helps developers and users to understand the contract and its functionalities.\nIn Cairo, you can add comments with //.\n","title":"Documentation","titles":[]},"7":{"href":"/ch00/basics/documentation#best-practices","html":"\n<p>Since Cairo 1, the community has adopted a <a href=\"https://doc.rust-lang.org/rust-by-example/meta/doc.html\">Rust-like documentation style</a>.</p>\n","isPage":false,"text":"\nSince Cairo 1, the community has adopted a Rust-like documentation style.\n","title":"Best Practices:","titles":["Documentation",null]},"8":{"href":"/ch00/basics/documentation#contract-interface","html":"\n<p>In smart contracts, you will often have a trait that defines the contract&#x27;s interface (with <code>#[starknet::interface]</code>).\nThis is the perfect place to include detailed documentation explaining the purpose and functionality of the contract entry points. You can follow this template:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">#[starknet</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">interface]</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">trait</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> IContract</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TContractState</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt; {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    /// High-level description of the function</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    ///</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    /// # Arguments</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    ///</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    /// * `arg_1` - Description of the argument</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    /// * `arg_n` - ...</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    ///</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    /// # Returns</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    ///</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    /// High-level description of the return value</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    fn</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> do_something</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">ref</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> self</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> TContractState</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, arg_1</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> T_arg_1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">-&gt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> T_return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<p>Keep in mind that this should not describe the implementation details of the function, but rather the high-level purpose and functionality of the contract from the perspective of a user.</p>\n","isPage":false,"text":"\nIn smart contracts, you will often have a trait that defines the contract&#x27;s interface (with #[starknet::interface]).\nThis is the perfect place to include detailed documentation explaining the purpose and functionality of the contract entry points. You can follow this template:\n#[starknet::interface]\ntrait IContract&lt;TContractState&gt; {\n    /// High-level description of the function\n    ///\n    /// # Arguments\n    ///\n    /// * `arg_1` - Description of the argument\n    /// * `arg_n` - ...\n    ///\n    /// # Returns\n    ///\n    /// High-level description of the return value\n    fn do_something(ref self: TContractState, arg_1: T_arg_1) -&gt; T_return;\n}\nKeep in mind that this should not describe the implementation details of the function, but rather the high-level purpose and functionality of the contract from the perspective of a user.\n","title":"Contract Interface:","titles":["Documentation",null]},"9":{"href":"/ch00/basics/documentation#implementation-details","html":"\n<p>When writing the logic of the contract, you can add comments to describe the technical implementation details of the functions.</p>\n<blockquote>\n<p>Avoid over-commenting: Comments should provide additional value and clarity.</p>\n</blockquote>","isPage":false,"text":"\nWhen writing the logic of the contract, you can add comments to describe the technical implementation details of the functions.\n\nAvoid over-commenting: Comments should provide additional value and clarity.\n","title":"Implementation Details:","titles":["Documentation",null]},"10":{"href":"/ch00/basics/introduction#basics-of-smart-contracts-in-cairo","html":"</header>\n<p>The following chapters will introduce you to Starknet smart contracts and how to write them in Cairo.</p>","isPage":true,"text":"\nThe following chapters will introduce you to Starknet smart contracts and how to write them in Cairo.","title":"Basics of Smart Contracts in Cairo","titles":[]},"11":{"href":"/ch00/cairo_cheatsheet/cairo_cheatsheet#cairo-cheatsheet","html":"</header>\n<p>This chapter aims to provide a quick reference for the most common Cairo constructs.</p>","isPage":true,"text":"\nThis chapter aims to provide a quick reference for the most common Cairo constructs.","title":"Cairo Cheatsheet","titles":[]},"12":{"href":"/ch00/interacting/interacting#deploy-and-interact-with-contracts","html":"</header>\n<p>In this chapter, we will see how to deploy and interact with contracts.</p>","isPage":true,"text":"\nIn this chapter, we will see how to deploy and interact with contracts.","title":"Deploy and interact with contracts","titles":[]}},"dirtCount":0,"index":[["quick",{"2":{"11":1}}],["keep",{"2":{"8":1}}],["`arg",{"2":{"8":2}}],["gt",{"2":{"8":2}}],["get",{"0":{"0":1}}],["rather",{"2":{"8":1}}],["rust",{"2":{"7":1}}],["reference",{"2":{"11":1}}],["ref",{"2":{"8":1}}],["return",{"2":{"8":2}}],["returns",{"2":{"8":1}}],["remain",{"2":{"5":1}}],["replace",{"2":{"5":1}}],["represent",{"2":{"2":1}}],["1`",{"2":{"8":1}}],["1",{"2":{"7":1,"8":2}}],["your",{"2":{"6":1}}],["you",{"2":{"5":2,"6":1,"8":2,"9":1,"10":1}}],["yield",{"2":{"4":2}}],["java",{"2":{"5":1}}],["logic",{"2":{"9":1}}],["level",{"2":{"8":3}}],["let",{"2":{"5":1}}],["lt",{"2":{"8":1}}],["language",{"2":{"5":1}}],["languages",{"2":{"5":2}}],["like",{"2":{"5":2,"7":1}}],["listings",{"2":{"1":1,"2":2,"4":1,"5":2}}],["perspective",{"2":{"8":1}}],["perfect",{"2":{"8":1}}],["purpose",{"2":{"8":2}}],["place",{"2":{"8":1}}],["practices",{"0":{"7":1}}],["provide",{"2":{"9":1,"11":1}}],["programming",{"2":{"5":2}}],["product",{"0":{"1":1},"2":{"1":2}}],["parameter",{"2":{"5":1}}],["parts",{"2":{"5":1}}],["points",{"2":{"8":1}}],["point",{"2":{"5":1}}],["upgrading",{"2":{"5":1}}],["upgraded",{"2":{"5":1}}],["upgrade",{"2":{"5":3}}],["upgradeablecontract",{"2":{"5":5}}],["upgradeable",{"0":{"5":1},"2":{"5":4}}],["update",{"2":{"5":1}}],["using",{"2":{"5":1}}],["users",{"2":{"6":1}}],["user",{"2":{"4":2,"8":1}}],["used",{"2":{"2":1,"5":1}}],["understand",{"2":{"6":1}}],["unique",{"2":{"5":1}}],["unambiguously",{"2":{"5":1}}],["most",{"2":{"11":1}}],["modify",{"2":{"5":1}}],["mind",{"2":{"8":1}}],["mint",{"2":{"4":1}}],["method",{"2":{"5":1}}],["must",{"2":{"2":1}}],["high",{"2":{"8":3}}],["hint",{"2":{"5":1}}],["have",{"2":{"8":1}}],["has",{"2":{"7":1}}],["hash",{"2":{"5":5}}],["however",{"2":{"5":1}}],["how",{"2":{"4":1,"5":1,"10":1,"12":1}}],["helps",{"2":{"6":1}}],["hello",{"2":{"0":1}}],["here",{"2":{"2":1,"4":1}}],["value",{"2":{"8":1,"9":1}}],["vault",{"0":{"4":1},"2":{"4":3}}],["v1",{"2":{"5":5}}],["v0",{"2":{"5":3}}],["version",{"2":{"5":4}}],["verification",{"0":{"3":1}}],["do",{"2":{"8":1}}],["document",{"2":{"6":1}}],["documentation",{"0":{"6":1},"1":{"7":1,"8":1,"9":1},"2":{"7":1,"8":1}}],["data",{"2":{"5":1}}],["distinguish",{"2":{"5":1}}],["division",{"2":{"5":1}}],["divided",{"2":{"5":1}}],["different",{"2":{"2":1,"5":1}}],["details",{"0":{"9":1},"2":{"8":1,"9":1}}],["detailed",{"2":{"8":1}}],["describe",{"2":{"8":1,"9":1}}],["description",{"2":{"8":3}}],["developers",{"2":{"6":1}}],["deploy",{"0":{"12":1},"2":{"12":1}}],["deploying",{"2":{"5":1}}],["deployed",{"2":{"5":5}}],["deposited",{"2":{"4":1}}],["deposits",{"2":{"4":1}}],["defines",{"2":{"5":1,"8":1}}],["definition",{"2":{"5":2}}],["defi",{"0":{"4":1}}],["zeppelin",{"2":{"2":1}}],["over",{"2":{"9":1}}],["on",{"2":{"5":1}}],["one",{"2":{"5":1}}],["ones",{"2":{"2":1}}],["objects",{"2":{"5":1}}],["object",{"2":{"5":3}}],["oriented",{"2":{"5":2}}],["or",{"2":{"2":1}}],["open",{"2":{"2":1}}],["other",{"2":{"2":1}}],["often",{"2":{"8":1}}],["of",{"0":{"10":1},"2":{"1":1,"2":1,"4":3,"5":6,"8":7,"9":2}}],["x27",{"2":{"2":2,"4":1,"5":2,"6":1,"8":1}}],["n`",{"2":{"8":1}}],["next",{"2":{"5":1}}],["newer",{"2":{"5":1}}],["name",{"2":{"5":1}}],["names",{"2":{"2":2,"5":1}}],["not",{"2":{"2":1,"5":1,"8":1}}],["write",{"2":{"10":1}}],["writing",{"2":{"9":1}}],["written",{"2":{"2":2}}],["was",{"2":{"5":1}}],["will",{"2":{"5":2,"6":1,"8":1,"10":1,"12":1}}],["with",{"0":{"12":1},"2":{"5":3,"6":1,"8":1,"12":1}}],["withdraw",{"2":{"4":1}}],["withdraws",{"2":{"4":1}}],["which",{"2":{"5":1}}],["when",{"2":{"4":2,"9":1}}],["where",{"2":{"2":1,"5":1}}],["we",{"2":{"5":1,"12":1}}],["works",{"2":{"4":1}}],["world",{"2":{"0":1}}],["basics",{"0":{"10":1}}],["but",{"2":{"8":1}}],["burns",{"2":{"4":1}}],["both",{"2":{"4":1}}],["best",{"0":{"7":1}}],["behaves",{"2":{"5":1}}],["between",{"2":{"5":1}}],["be",{"2":{"2":1}}],["byte",{"2":{"5":1}}],["by",{"2":{"1":1,"2":1,"4":1,"5":4}}],["for",{"2":{"11":1}}],["follows",{"2":{"5":1}}],["following",{"2":{"2":1,"10":1}}],["follow",{"2":{"2":1,"8":1}}],["fn",{"2":{"8":1}}],["from",{"2":{"2":1,"8":1}}],["functions",{"2":{"9":1}}],["functionality",{"2":{"8":2}}],["functionalities",{"2":{"6":1}}],["function",{"2":{"2":2,"5":3,"8":2}}],["fungible",{"2":{"2":1}}],["technical",{"2":{"9":1}}],["template",{"2":{"8":1}}],["t",{"2":{"8":2}}],["tcontractstate",{"2":{"8":2}}],["trait",{"2":{"8":2}}],["transaction",{"2":{"5":1}}],["time",{"2":{"6":1}}],["take",{"2":{"6":1}}],["two",{"2":{"5":2}}],["to",{"2":{"2":2,"4":1,"5":11,"6":3,"8":1,"9":1,"10":2,"11":1,"12":1}}],["tokens",{"2":{"2":1}}],["token",{"0":{"2":1},"2":{"2":2,"4":2}}],["think",{"2":{"5":1}}],["this",{"2":{"1":1,"2":1,"4":1,"5":4,"8":3,"11":1,"12":1}}],["that",{"2":{"2":1,"5":4,"8":2}}],["them",{"2":{"10":1}}],["then",{"2":{"5":1}}],["their",{"2":{"4":1}}],["there",{"2":{"2":1}}],["therefore",{"2":{"2":1}}],["they",{"2":{"2":1}}],["the",{"2":{"1":2,"2":8,"4":8,"5":21,"6":2,"7":1,"8":12,"9":4,"10":1,"11":1}}],["explaining",{"2":{"8":1}}],["example",{"2":{"1":1,"2":1,"4":1,"5":1}}],["effectively",{"2":{"5":1}}],["each",{"2":{"5":2}}],["everything",{"2":{"5":1}}],["entry",{"2":{"5":1,"8":1}}],["essential",{"2":{"5":1}}],["erc20",{"0":{"2":1},"2":{"2":9}}],["icontract",{"2":{"8":1}}],["important",{"2":{"6":1}}],["implementations",{"2":{"2":1}}],["implementation",{"0":{"9":1},"2":{"2":1,"5":2,"8":1,"9":1}}],["implement",{"2":{"2":1}}],["illustrate",{"2":{"5":1}}],["identified",{"2":{"5":1}}],["identifier",{"2":{"5":1}}],["identify",{"2":{"5":1}}],["invokes",{"2":{"5":1}}],["instance",{"2":{"5":3}}],["instances",{"2":{"5":1}}],["information",{"2":{"5":2}}],["interact",{"0":{"12":1},"2":{"12":1}}],["interface",{"0":{"8":1},"2":{"2":5,"8":3}}],["introduce",{"2":{"10":1}}],["into",{"2":{"5":1}}],["initial",{"2":{"4":1,"5":1}}],["in",{"0":{"10":1},"2":{"2":5,"5":5,"6":1,"8":2,"10":1,"12":1}}],["include",{"2":{"1":1,"2":2,"4":1,"5":2,"8":1}}],["its",{"2":{"5":3,"6":1}}],["it",{"2":{"2":1,"4":1,"5":3,"6":2}}],["is",{"2":{"1":1,"2":2,"4":1,"5":5,"8":1}}],["smart",{"0":{"10":1},"2":{"8":1,"10":1}}],["same",{"2":{"5":1}}],["something",{"2":{"8":1}}],["so",{"2":{"5":1}}],["solidity",{"2":{"1":1,"2":2,"4":1}}],["style",{"2":{"7":1}}],["stored",{"2":{"5":1}}],["storage",{"2":{"5":1}}],["start",{"2":{"5":1}}],["started",{"0":{"0":1}}],["starknet",{"2":{"2":2,"5":2,"8":2,"10":1}}],["standard",{"2":{"2":1}}],["syscall",{"2":{"5":1}}],["specific",{"2":{"5":1}}],["specifies",{"2":{"5":1}}],["self",{"2":{"8":1}}],["see",{"2":{"5":1,"12":1}}],["send",{"2":{"5":1}}],["semantics",{"2":{"5":1}}],["several",{"2":{"2":1}}],["shares",{"2":{"4":2}}],["should",{"2":{"2":1,"8":1,"9":1}}],["since",{"2":{"7":1}}],["similar",{"2":{"5":1}}],["simple",{"0":{"4":1},"2":{"4":2}}],["signature",{"0":{"3":1}}],["such",{"2":{"2":1}}],["s",{"2":{"2":2,"4":1,"5":2,"6":1,"8":1}}],["slightly",{"2":{"2":1}}],["snake",{"2":{"2":1}}],["src",{"2":{"1":1,"2":2,"4":1,"5":2}}],["aims",{"2":{"11":1}}],["avoid",{"2":{"9":1}}],["arg",{"2":{"8":2}}],["argument",{"2":{"8":1}}],["arguments",{"2":{"8":1}}],["are",{"2":{"2":3,"5":1}}],["adopted",{"2":{"7":1}}],["additional",{"2":{"9":1}}],["add",{"2":{"6":1,"9":1}}],["adaptation",{"2":{"1":1,"4":1}}],["all",{"2":{"5":1}}],["amount",{"2":{"4":2}}],["amm",{"0":{"1":1},"2":{"1":2}}],["a",{"2":{"4":3,"5":15,"7":1,"8":2,"11":1}}],["associated",{"2":{"5":1}}],["assigns",{"2":{"5":1}}],["assets",{"2":{"2":1}}],["as",{"2":{"2":1,"5":3}}],["analogous",{"2":{"5":1}}],["and",{"0":{"12":1},"2":{"4":2,"5":4,"6":2,"8":2,"9":1,"10":1,"12":1}}],["an",{"2":{"2":2,"5":4}}],["applications",{"2":{"1":1,"2":2,"4":1,"5":2}}],["chapter",{"2":{"11":1,"12":1}}],["chapters",{"2":{"10":1}}],["cheatsheet",{"0":{"11":1}}],["clarity",{"2":{"9":1}}],["class",{"2":{"5":12}}],["classes",{"2":{"5":2}}],["common",{"2":{"11":1}}],["commenting",{"2":{"9":1}}],["comments",{"2":{"6":1,"9":2}}],["community",{"2":{"7":1}}],["corresponding",{"2":{"5":1}}],["corresponds",{"2":{"5":1}}],["code",{"2":{"5":1,"6":1}}],["constructs",{"2":{"11":1}}],["constantproductammcontract",{"2":{"1":1}}],["constant",{"0":{"1":1},"2":{"1":2}}],["consider",{"2":{"5":1}}],["contains",{"2":{"5":1}}],["contract",{"0":{"5":1,"8":1},"2":{"4":2,"5":23,"6":1,"8":3,"9":1}}],["contracts",{"0":{"10":1,"12":1},"2":{"1":1,"2":1,"5":2,"8":1,"10":1,"12":1}}],["concept",{"2":{"5":2}}],["conctract",{"2":{"2":1}}],["create",{"2":{"2":1}}],["can",{"2":{"5":2,"6":1,"8":1,"9":1}}],["call",{"2":{"5":1}}],["calling",{"2":{"5":1}}],["called",{"2":{"2":1}}],["calculates",{"2":{"4":2}}],["camelcase",{"2":{"2":1}}],["case",{"2":{"2":2}}],["cairo",{"0":{"10":1,"11":1},"2":{"1":2,"2":4,"4":2,"5":3,"6":1,"7":1,"10":1,"11":1}}]],"serializationVersion":2}
