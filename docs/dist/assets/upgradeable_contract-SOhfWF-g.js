import{u as i,j as e}from"./index-18w1D-AA.js";const r={title:"Upgradeable Contract",description:"undefined"};function n(a){const s={a:"a",code:"code",div:"div",h1:"h1",header:"header",p:"p",pre:"pre",span:"span",...i(),...a.components};return e.jsxs(e.Fragment,{children:[e.jsx(s.header,{children:e.jsxs(s.h1,{id:"upgradeable-contract",children:["Upgradeable Contract",e.jsx(s.a,{"aria-hidden":"true",tabIndex:"-1",href:"#upgradeable-contract",children:e.jsx(s.div,{"data-autolink-icon":!0})})]})}),`
`,e.jsx(s.p,{children:`In Starknet, contracts are divided into two parts: contract classes and contract
instances. This division follows a similar concept used in object-oriented
programming languages, where we distinguish between the definition and implementation
of objects.`}),`
`,e.jsx(s.p,{children:`A contract class is the definition of a contract: it specifies how the contract
behaves. It contains essential information like the Cairo byte code, hint
information, entry point names, and everything that defines its semantics
unambiguously.`}),`
`,e.jsx(s.p,{children:`To identify different contract classes, Starknet assigns a unique identifier to each
class: the class hash. A contract instance is a deployed contract that corresponds to
a specific contract class. Think of it as an instance of an object in languages like
Java.`}),`
`,e.jsx(s.p,{children:"Each class is identified by its class hash, which is analogous to a class name in an object-oriented programming language. A contract instance is a deployed contract corresponding to a class."}),`
`,e.jsxs(s.p,{children:["You can upgrade a deployed contract to a newer version by calling the ",e.jsx(s.code,{children:"replace_class_syscall"})," function. By using this function, you can update the class hash associated with a deployed contract, effectively upgrading its implementation. However, this will not modify the contract's storage, so all the data stored in the contract will remain the same."]}),`
`,e.jsxs(s.p,{children:["To illustrate this concept, let's consider an example with two contracts: ",e.jsx(s.code,{children:"UpgradeableContract_V0"}),", and ",e.jsx(s.code,{children:"UpgradeableContract_V1"}),`.
Start by deploying `,e.jsx(s.code,{children:"UpgradeableContract_V0"})," as the initial version. Next, send a transaction that invokes the ",e.jsx(s.code,{children:"upgrade"})," function, with the class hash of ",e.jsx(s.code,{children:"UpgradeableContract_V1"})," as parameter to upgrade the class hash of the deployed contract to the ",e.jsx(s.code,{children:"UpgradeableContract_V1"})," one. Then, call the ",e.jsx(s.code,{children:"version"})," method on the contract to see that the contract was upgraded to the V1 version."]}),`
`,e.jsx(s.pre,{className:"shiki shiki-themes github-light github-dark-dimmed",style:{backgroundColor:"#fff","--shiki-dark-bg":"#22272e",color:"#24292e","--shiki-dark":"#adbac7"},tabIndex:"0",children:e.jsx(s.code,{children:e.jsxs(s.span,{className:"line",children:[e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:"{{#include "}),e.jsx(s.span,{style:{color:"#D73A49","--shiki-dark":"#F47067"},children:"../../"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:"listings"}),e.jsx(s.span,{style:{color:"#D73A49","--shiki-dark":"#F47067"},children:"/"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:"applications"}),e.jsx(s.span,{style:{color:"#D73A49","--shiki-dark":"#F47067"},children:"/"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:"upgradeable_contract"}),e.jsx(s.span,{style:{color:"#D73A49","--shiki-dark":"#F47067"},children:"/"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:"src"}),e.jsx(s.span,{style:{color:"#D73A49","--shiki-dark":"#F47067"},children:"/"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:"upgradeable_contract_v0"}),e.jsx(s.span,{style:{color:"#D73A49","--shiki-dark":"#F47067"},children:"."}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:"cairo"}),e.jsx(s.span,{style:{color:"#D73A49","--shiki-dark":"#F47067"},children:":"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:"contract}}"})]})})}),`
`,e.jsx(s.pre,{className:"shiki shiki-themes github-light github-dark-dimmed",style:{backgroundColor:"#fff","--shiki-dark-bg":"#22272e",color:"#24292e","--shiki-dark":"#adbac7"},tabIndex:"0",children:e.jsx(s.code,{children:e.jsxs(s.span,{className:"line",children:[e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:"{{#include "}),e.jsx(s.span,{style:{color:"#D73A49","--shiki-dark":"#F47067"},children:"../../"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:"listings"}),e.jsx(s.span,{style:{color:"#D73A49","--shiki-dark":"#F47067"},children:"/"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:"applications"}),e.jsx(s.span,{style:{color:"#D73A49","--shiki-dark":"#F47067"},children:"/"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:"upgradeable_contract"}),e.jsx(s.span,{style:{color:"#D73A49","--shiki-dark":"#F47067"},children:"/"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:"src"}),e.jsx(s.span,{style:{color:"#D73A49","--shiki-dark":"#F47067"},children:"/"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:"upgradeable_contract_v1"}),e.jsx(s.span,{style:{color:"#D73A49","--shiki-dark":"#F47067"},children:"."}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:"cairo}}"})]})})})]})}function c(a={}){const{wrapper:s}={...i(),...a.components};return s?e.jsx(s,{...a,children:e.jsx(n,{...a})}):n(a)}export{c as default,r as frontmatter};
